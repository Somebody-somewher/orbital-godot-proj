[gd_scene load_steps=21 format=3 uid="uid://8dgw8wdiub72"]

[ext_resource type="Script" uid="uid://bxyph8i4gl7y6" path="res://scripts/card.gd" id="1_hael8"]
[ext_resource type="Texture2D" uid="uid://vb15s4ed368c" path="res://sprites/dummy_card.png" id="1_xuvqn"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_tgmmg"]
input_name = "texture"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_4dx8l"]

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_qf083"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_40ytf"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_5273u"]
constant = Color(0.993004, 0.68888, 0.377639, 1)

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_qbjcq"]
default_input_values = [0, 0.0, 1, 0.07]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_dqwud"]
parameter_name = "Noise"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_hddve"]
source = 5

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_50dou"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_ulcbd"]

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_nii3k"]
constant = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_hg1gp"]
parameter_name = "DissolveValue"
hint = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_lcyhw"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShader" id="VisualShader_usp0v"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Noise;
uniform float DissolveValue : hint_range(0.0, 1.0);



void fragment() {
// ColorConstant:14
	vec4 n_out14p0 = vec4(0.993004, 0.688880, 0.377639, 1.000000);


	vec4 n_out9p0;
// Texture2D:9
	n_out9p0 = texture(TEXTURE, UV);
	float n_out9p4 = n_out9p0.a;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Noise, UV);


// FloatParameter:7
	float n_out7p0 = DissolveValue;


// FloatConstant:5
	float n_out5p0 = 0.000000;


// FloatConstant:6
	float n_out6p0 = 1.000000;


	vec3 n_out12p0;
// If:12
	float n_in12p2 = 0.00001;
	vec3 n_in12p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out3p0.x - n_out7p0) < n_in12p2)
	{
		n_out12p0 = n_in12p3;
	}
	else if(n_out3p0.x < n_out7p0)
	{
		n_out12p0 = vec3(n_out6p0);
	}
	else
	{
		n_out12p0 = vec3(n_out5p0);
	}


// Mix:13
	vec3 n_out13p0 = mix(vec3(n_out14p0.xyz), vec3(n_out9p0.xyz), n_out12p0);


// FloatOp:15
	float n_in15p1 = 0.07000;
	float n_out15p0 = n_out7p0 + n_in15p1;


	vec3 n_out4p0;
// If:4
	float n_in4p2 = 0.00001;
	vec3 n_in4p3 = vec3(0.00000, 0.00000, 0.00000);
	if(abs(n_out3p0.x - n_out15p0) < n_in4p2)
	{
		n_out4p0 = n_in4p3;
	}
	else if(n_out3p0.x < n_out15p0)
	{
		n_out4p0 = vec3(n_out6p0);
	}
	else
	{
		n_out4p0 = vec3(n_out5p0);
	}


// Mix:11
	float n_in11p0 = 0.00000;
	float n_out11p0 = mix(n_in11p0, n_out4p0.x, n_out9p4);


// Output:0
	COLOR.rgb = n_out13p0;
	COLOR.a = n_out11p0;


}
"
graph_offset = Vector2(188.16, 191.718)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1500, 680)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_dqwud")
nodes/fragment/2/position = Vector2(100, 220)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_hddve")
nodes/fragment/3/position = Vector2(420, 360)
nodes/fragment/4/node = SubResource("VisualShaderNodeIf_50dou")
nodes/fragment/4/position = Vector2(820, 760)
nodes/fragment/5/node = SubResource("VisualShaderNodeFloatConstant_ulcbd")
nodes/fragment/5/position = Vector2(500, 820)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatConstant_nii3k")
nodes/fragment/6/position = Vector2(500, 920)
nodes/fragment/7/node = SubResource("VisualShaderNodeFloatParameter_hg1gp")
nodes/fragment/7/position = Vector2(-20, 620)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_lcyhw")
nodes/fragment/9/position = Vector2(780, 1040)
nodes/fragment/10/node = SubResource("VisualShaderNodeInput_tgmmg")
nodes/fragment/10/position = Vector2(460, 1020)
nodes/fragment/11/node = SubResource("VisualShaderNodeMix_4dx8l")
nodes/fragment/11/position = Vector2(1220, 760)
nodes/fragment/12/node = SubResource("VisualShaderNodeIf_qf083")
nodes/fragment/12/position = Vector2(820, 500)
nodes/fragment/13/node = SubResource("VisualShaderNodeMix_40ytf")
nodes/fragment/13/position = Vector2(1220, 460)
nodes/fragment/14/node = SubResource("VisualShaderNodeColorConstant_5273u")
nodes/fragment/14/position = Vector2(900, 300)
nodes/fragment/15/node = SubResource("VisualShaderNodeFloatOp_qbjcq")
nodes/fragment/15/position = Vector2(300, 700)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 4, 0, 5, 0, 4, 4, 6, 0, 4, 5, 10, 0, 9, 2, 4, 0, 11, 1, 9, 4, 11, 2, 3, 0, 12, 0, 7, 0, 12, 1, 5, 0, 12, 4, 6, 0, 12, 5, 9, 0, 13, 1, 12, 0, 13, 2, 14, 0, 13, 0, 7, 0, 15, 0, 15, 0, 4, 1, 11, 0, 0, 1, 13, 0, 0, 0)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_4dx8l"]
frequency = 0.0017

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_qf083"]
noise = SubResource("FastNoiseLite_4dx8l")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_4dx8l"]
resource_local_to_scene = true
shader = SubResource("VisualShader_usp0v")
shader_parameter/Noise = SubResource("NoiseTexture2D_qf083")
shader_parameter/DissolveValue = 1.0

[sub_resource type="RectangleShape2D" id="RectangleShape2D_fdsqi"]
size = Vector2(161, 230)

[node name="Card" type="Node2D"]
script = ExtResource("1_hael8")

[node name="Sprite2D" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_4dx8l")
texture = ExtResource("1_xuvqn")

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
shape = SubResource("RectangleShape2D_fdsqi")

[connection signal="mouse_entered" from="Area2D" to="." method="_on_area_2d_mouse_entered"]
[connection signal="mouse_exited" from="Area2D" to="." method="_on_area_2d_mouse_exited"]
